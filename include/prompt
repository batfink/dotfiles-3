##########################################
# PROMPT COMPONENTS
##########################################
collapse_pwd() {
    if [[ -n $GEEKSTUFF ]]; then
        CURDIR=$(pwd | sed -e "s,^$HOME,~,g;s,^$GEEKSTUFF,$,g")
    else
        CURDIR=$(pwd | sed -e "s,^$HOME,~,g")
    fi
    echo "%{$fg[blue]%}$CURDIR%{$reset_color%}"
}
prompt_char() {
    git branch >/dev/null 2>/dev/null && local SIGN='±' || local SIGN='»'
    echo "$SIGN%{$reset_color%}"
}
git_info() {
    git branch >/dev/null 2>/dev/null && \
    echo "%{$fg[white]%} on %{$fg[yellow]%}$(parse_git_branch)%{$reset_color%}"
}
node_version() {
    if type node >/dev/null 2>&1; then
        echo "%{$fg[black]%}[$(node -v)]%{$reset_color%}"
    fi
}
multiline_prompt() {
    echo "%{$fg[red]%} »%{$reset_color%} "
}

minimal_prompt() {
    echo "%{$fg[red]%}\u3bb $(minimal_git)%{$fg[blue]%}\ubb "
}
minimal_git() {
    git branch >/dev/null 2>/dev/null && \
    echo "%{$fg[cyan]%}{$(parse_git_branch)}%{$reset_color%} "
}


##########################################
# AUTORUN COMMANDS
##########################################
tmux_pane_pwd() {
    [ -n "$TMUX" ] && tmux rename-window $(basename $(pwd))
}


##########################################
# PROMPT
##########################################
# local STATUS="%(?:%{$fg[green]%}:%{$fg[red]%}%s)"
# PROMPT=$'$(tmux_pane_pwd)\n$(whoami)$(collapse_pwd)$(git_info)
# ${STATUS}$(prompt_char) '
# PROMPT2='$(multiline_prompt)'
# RPROMPT='$(node_version)'

PROMPT=$'$(tmux_pane_pwd)\n$(minimal_prompt)'
PROMPT2='$(multiline_prompt)'
